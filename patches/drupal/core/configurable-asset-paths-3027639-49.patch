diff --git a/core/assets/scaffold/files/default.settings.php b/core/assets/scaffold/files/default.settings.php
index 72be7750b9..6acf3718f2 100644
--- a/core/assets/scaffold/files/default.settings.php
+++ b/core/assets/scaffold/files/default.settings.php
@@ -490,6 +490,15 @@
  */
 # $settings['file_public_path'] = 'sites/default/files';
 
+/**
+ * Optimized assets path:
+ *
+ * A local file system path where optimized assets will be stored. This directory
+ * must exist and be writable by Drupal. This directory must be relative to
+ * the Drupal installation directory and be accessible over the web.
+ */
+# $settings['file_assets_path'] = 'public://';
+
 /**
  * Private file path:
  *
diff --git a/core/core.services.yml b/core/core.services.yml
index 7780dfd0c2..5365fc266b 100644
--- a/core/core.services.yml
+++ b/core/core.services.yml
@@ -1388,6 +1388,10 @@ services:
     class: Drupal\Core\StreamWrapper\StreamWrapperManager
     calls:
       - [setContainer, ['@service_container']]
+  stream_wrapper.assets:
+    class: Drupal\Core\StreamWrapper\AssetsStream
+    tags:
+      - { name: stream_wrapper, scheme: assets }
   stream_wrapper.public:
     class: Drupal\Core\StreamWrapper\PublicStream
     tags:
diff --git a/core/lib/Drupal/Core/Asset/AssetDumper.php b/core/lib/Drupal/Core/Asset/AssetDumper.php
index 6f90f8f556..efd4c75633 100644
--- a/core/lib/Drupal/Core/Asset/AssetDumper.php
+++ b/core/lib/Drupal/Core/Asset/AssetDumper.php
@@ -40,7 +40,7 @@ public function dump($data, $file_extension) {
     // starting with "ad*".
     $filename = $file_extension . '_' . Crypt::hashBase64($data) . '.' . $file_extension;
     // Create the css/ or js/ path within the files folder.
-    $path = 'public://' . $file_extension;
+    $path = 'assets://' . $file_extension;
     $uri = $path . '/' . $filename;
     // Create the CSS or JS file.
     $this->fileSystem->prepareDirectory($path, FileSystemInterface::CREATE_DIRECTORY);
diff --git a/core/lib/Drupal/Core/Asset/CssCollectionOptimizer.php b/core/lib/Drupal/Core/Asset/CssCollectionOptimizer.php
index 7d47dad86e..20e2c75991 100644
--- a/core/lib/Drupal/Core/Asset/CssCollectionOptimizer.php
+++ b/core/lib/Drupal/Core/Asset/CssCollectionOptimizer.php
@@ -196,8 +196,8 @@ public function deleteAll() {
         $this->fileSystem->delete($uri);
       }
     };
-    if (is_dir('public://css')) {
-      $this->fileSystem->scanDirectory('public://css', '/.*/', ['callback' => $delete_stale]);
+    if (is_dir('assets://css')) {
+      $this->fileSystem->scanDirectory('assets://css', '/.*/', ['callback' => $delete_stale]);
     }
   }
 
diff --git a/core/lib/Drupal/Core/Asset/JsCollectionOptimizer.php b/core/lib/Drupal/Core/Asset/JsCollectionOptimizer.php
index 99c8ac6487..34977a8b40 100644
--- a/core/lib/Drupal/Core/Asset/JsCollectionOptimizer.php
+++ b/core/lib/Drupal/Core/Asset/JsCollectionOptimizer.php
@@ -194,8 +194,8 @@ public function deleteAll() {
         $this->fileSystem->delete($uri);
       }
     };
-    if (is_dir('public://js')) {
-      $this->fileSystem->scanDirectory('public://js', '/.*/', ['callback' => $delete_stale]);
+    if (is_dir('assets://js')) {
+      $this->fileSystem->scanDirectory('assets://js', '/.*/', ['callback' => $delete_stale]);
     }
   }
 
diff --git a/core/lib/Drupal/Core/File/HtaccessWriter.php b/core/lib/Drupal/Core/File/HtaccessWriter.php
index af971e6362..b5fbd29a99 100644
--- a/core/lib/Drupal/Core/File/HtaccessWriter.php
+++ b/core/lib/Drupal/Core/File/HtaccessWriter.php
@@ -107,6 +107,10 @@ public function defaultProtectedDirs() {
       $protected_dirs[] = new ProtectedDirectory('Private files directory', 'private://', TRUE);
     }
     $protected_dirs[] = new ProtectedDirectory('Temporary files directory', 'temporary://');
+    $assets_path = Settings::get('file_assets_path', 'public://');
+    if ($assets_path !== 'public://') {
+      $protected_dirs[] = new ProtectedDirectory('Optimized assets directory', $assets_path);
+    }
     return $protected_dirs;
   }
 
diff --git a/core/lib/Drupal/Core/StreamWrapper/AssetsStream.php b/core/lib/Drupal/Core/StreamWrapper/AssetsStream.php
new file mode 100644
index 0000000000..2de2cb84b9
--- /dev/null
+++ b/core/lib/Drupal/Core/StreamWrapper/AssetsStream.php
@@ -0,0 +1,64 @@
+<?php
+
+namespace Drupal\Core\StreamWrapper;
+
+use Drupal\Core\Site\Settings;
+use Drupal\Core\StringTranslation\StringTranslationTrait;
+
+/**
+ * Defines a Drupal stream wrapper class for optimized assets (assets://).
+ *
+ * Provides support for storing publicly accessible optimized assets files
+ * with the Drupal file interface.
+ */
+class AssetsStream extends PublicStream {
+  use StringTranslationTrait;
+
+  /**
+   * {@inheritdoc}
+   */
+  public static function getType() {
+    return StreamWrapperInterface::LOCAL_HIDDEN;
+  }
+
+  /**
+   * {@inheritdoc}
+   */
+  public function getName() {
+    return $this->t('Optimized assets files');
+  }
+
+  /**
+   * {@inheritdoc}
+   */
+  public function getDescription() {
+    return $this->t('Public local optimized assets files served by the webserver.');
+  }
+
+  /**
+   * {@inheritdoc}
+   */
+  public static function basePath($site_path = NULL) {
+    $path = Settings::get('file_assets_path', 'public://');
+    if ($path === 'public://') {
+      $path = PublicStream::basePath($site_path);
+    }
+    return $path;
+  }
+
+  /**
+   * {@inheritdoc}
+   */
+  public static function baseUrl() {
+    $path = Settings::get('file_assets_path', 'public://');
+    if ($path === 'public://') {
+      $base_url = PublicStream::baseUrl();
+    }
+    else {
+      $base_url = $GLOBALS['base_url'] . '/' . $path;
+    }
+
+    return $base_url;
+  }
+
+}
diff --git a/core/modules/system/src/Form/FileSystemForm.php b/core/modules/system/src/Form/FileSystemForm.php
index 9500606441..18c1cb8ce1 100644
--- a/core/modules/system/src/Form/FileSystemForm.php
+++ b/core/modules/system/src/Form/FileSystemForm.php
@@ -6,6 +6,7 @@
 use Drupal\Core\Datetime\DateFormatterInterface;
 use Drupal\Core\File\FileSystemInterface;
 use Drupal\Core\Form\FormStateInterface;
+use Drupal\Core\StreamWrapper\AssetsStream;
 use Drupal\Core\StreamWrapper\PrivateStream;
 use Drupal\Core\StreamWrapper\PublicStream;
 use Drupal\Core\Form\ConfigFormBase;
@@ -105,6 +106,13 @@ public function buildForm(array $form, FormStateInterface $form_state) {
       '#description' => $this->t('The base URL that will be used for public file URLs. This can be changed in settings.php'),
     ];
 
+    $form['file_assets_path'] = [
+      '#type' => 'item',
+      '#title' => $this->t('Optimized assets file system path'),
+      '#markup' => AssetsStream::basePath(),
+      '#description' => $this->t('A local file system path where optimized assets files will be stored. This directory must exist and be writable by Drupal. This directory must be relative to the Drupal installation directory and be accessible over the web. This must be changed in settings.php'),
+    ];
+
     $form['file_private_path'] = [
       '#type' => 'item',
       '#title' => $this->t('Private file system path'),
diff --git a/core/modules/system/src/Form/PerformanceForm.php b/core/modules/system/src/Form/PerformanceForm.php
index 9d28c4b829..c76aaf4018 100644
--- a/core/modules/system/src/Form/PerformanceForm.php
+++ b/core/modules/system/src/Form/PerformanceForm.php
@@ -138,12 +138,12 @@ public function buildForm(array $form, FormStateInterface $form_state) {
       '#access' => !$this->moduleHandler->moduleExists('page_cache'),
     ];
 
-    $directory = 'public://';
+    $directory = 'assets://';
     $is_writable = is_dir($directory) && is_writable($directory);
     $disabled = !$is_writable;
     $disabled_message = '';
     if (!$is_writable) {
-      $disabled_message = ' ' . $this->t('<strong class="error">Set up the <a href=":file-system">public files directory</a> to make these optimizations available.</strong>', [':file-system' => Url::fromRoute('system.file_system_settings')->toString()]);
+      $disabled_message = ' ' . $this->t('<strong class="error">Set up the <a href=":file-system">optimized assets file system path</a> to make these optimizations available.</strong>', [':file-system' => Url::fromRoute('system.file_system_settings')->toString()]);
     }
 
     $form['bandwidth_optimization'] = [
diff --git a/sites/default/default.settings.php b/sites/default/default.settings.php
index 72be7750b9..6acf3718f2 100644
--- a/sites/default/default.settings.php
+++ b/sites/default/default.settings.php
@@ -490,6 +490,15 @@
  */
 # $settings['file_public_path'] = 'sites/default/files';
 
+/**
+ * Optimized assets path:
+ *
+ * A local file system path where optimized assets will be stored. This directory
+ * must exist and be writable by Drupal. This directory must be relative to
+ * the Drupal installation directory and be accessible over the web.
+ */
+# $settings['file_assets_path'] = 'public://';
+
 /**
  * Private file path:
  *
