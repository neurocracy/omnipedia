diff --git a/core/lib/Drupal/Core/Asset/AssetResolver.php b/core/lib/Drupal/Core/Asset/AssetResolver.php
index 04a5186368..ac53c56334 100644
--- a/core/lib/Drupal/Core/Asset/AssetResolver.php
+++ b/core/lib/Drupal/Core/Asset/AssetResolver.php
@@ -264,8 +264,15 @@ public function getJsAssets(AttachedAssetsInterface $assets, $optimize, Language
             $options['scope'] = in_array($library, $header_js_libraries) ? 'header' : 'footer';
 
             // Preprocess can only be set if caching is enabled and no
-            // attributes are set.
-            $options['preprocess'] = $options['cache'] && empty($options['attributes']) ? $options['preprocess'] : FALSE;
+            // attributes other than 'async' or 'defer' are set.
+            //
+            // @see: https://www.drupal.org/project/drupal/issues/1587536
+            $options['preprocess'] = $options['cache'] && (
+              empty($options['attributes']) ||
+              count(\array_diff_key(
+                $options['attributes'], ['async' => TRUE, 'defer' => TRUE])
+              ) === 0
+            ) ? $options['preprocess'] : FALSE;
 
             // Always add a tiny value to the weight, to conserve the insertion
             // order.
diff --git a/core/lib/Drupal/Core/Asset/JsCollectionGrouper.php b/core/lib/Drupal/Core/Asset/JsCollectionGrouper.php
index 17253626f2..0731bc2c06 100644
--- a/core/lib/Drupal/Core/Asset/JsCollectionGrouper.php
+++ b/core/lib/Drupal/Core/Asset/JsCollectionGrouper.php
@@ -33,6 +33,21 @@ public function group(array $js_assets) {
           // Help ensure maximum reuse of aggregate files by only grouping
           // together items that share the same 'group' value.
           $group_keys = $item['preprocess'] ? [$item['type'], $item['group']] : FALSE;
+
+          // Enables aggregation for 'async' or 'defer' attributes.
+          //
+          // @see: https://www.drupal.org/project/drupal/issues/1587536
+          if ($group_keys && !empty($item['attributes'])) {
+            foreach (array_keys($item['attributes']) as $attribute_key) {
+              if (in_array($attribute_key, ['async', 'defer'])) {
+                $group_keys[] = $attribute_key;
+              }
+              else {
+                $group_keys = FALSE;
+              }
+            }
+          }
+
           break;
 
         case 'external':
