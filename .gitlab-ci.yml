stages:
  - .pre
  - build
  - validate
  - test
  - .post

variables:

  DEBIAN_FRONTEND: "noninteractive"

  COMPOSER_CACHE_PATH_RELATIVE: ".composer/cache"
  YARN_CACHE_PATH_RELATIVE: ".yarn/cache"
  # Absolute cache paths outside of the DDEV web container.
  COMPOSER_CACHE_DIR_CI: "$CI_PROJECT_DIR/$COMPOSER_CACHE_PATH_RELATIVE"
  YARN_CACHE_DIR_CI: "$CI_PROJECT_DIR/$YARN_CACHE_PATH_RELATIVE"
  # Absolute cache paths inside the DDEV web container.
  COMPOSER_CACHE_DIR_CONTAINER: "/var/www/html/$COMPOSER_CACHE_PATH_RELATIVE"
  YARN_CACHE_DIR_CONTAINER: "/var/www/html/$YARN_CACHE_PATH_RELATIVE"

  PHPUNIT_RESULTS_FILE: '$CI_PROJECT_DIR/phpunit-results.xml'

cache:
  # Cache is per-branch.
  key: "$CI_BUILD_REF_NAME"
  paths:
    - "$COMPOSER_CACHE_DIR_CI"
    - "$YARN_CACHE_DIR_CI"

# Hidden job intended as a template for tests.
#
# @see https://docs.gitlab.com/ee/ci/yaml/yaml_optimization.html#anchors
.ddev-base: &ddev-base

  variables:

    DOCKER_HOST: tcp://docker:2375
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: ""

    # Allow service containers to see each other.
    #
    # @see https://docs.gitlab.com/ee/ci/services/#connecting-services
    FF_NETWORK_PER_BUILD: 'true'
    # Remove "umask 0000" usage, so DDEV has permissions on the cloned
    # repository.
    #
    # @see https://docs.gitlab.com/runner/configuration/feature-flags.html#available-feature-flags
    FF_DISABLE_UMASK_FOR_DOCKER_EXECUTOR: 'true'

  services:
    - name: docker:20-dind
      alias: docker
      command: ["--tls=false"]

  image:

    name: registry.gitlab.com/consensus.enterprises/drumkit/ddev
    # Options to run the Docker executor with; notably run as the 'ddev' user
    # and group. This must match the user and group that the Drumkit DDEV image
    # creates.
    #
    # @see https://docs.gitlab.com/ee/ci/yaml/index.html#imagedocker
    docker:
      user: ddev:ddev
    # We have to override the container entrypoint or else we end up in /bin/sh
    # and `source d` doesn't work.
    #
    # @see https://docs.gitlab.com/ee/ci/docker/using_docker_images.html#overriding-the-entrypoint-of-an-image
    entrypoint: [""]

  before_script:
    # Opt into sending diagnotistic data to the DDEV project to help improve it.
    #
    # @see https://ddev.readthedocs.io/en/stable/users/usage/diagnostics/
    - ddev config global --instrumentation-opt-in=true
    # Disable the DDEV SSH agent container as it fails its health checks and we
    # shouldn't need it.
    - ddev config global --omit-containers=ddev-ssh-agent
    - ddev mutagen reset && ddev config global --mutagen-enabled=false
    # Pass the Composer and Yarn cache directory paths to the container since
    # they don't inherit environment variables from outside the container.
    #
    # @see https://ddev.readthedocs.io/en/stable/users/extend/customization-extendibility/#environment-variables-for-containers-and-services
    - ddev config --web-environment-add="COMPOSER_CACHE_DIR=$COMPOSER_CACHE_DIR_CONTAINER"
    - ddev config --web-environment-add="YARN_CACHE_FOLDER=$YARN_CACHE_DIR_CONTAINER"
    - ddev start

  artifacts:
    expire_in: 1 week
    expose_as: web
    when: always
    exclude:
    - ".git"
    - ".git/**/*"
    - "$CI_PROJECT_DIR/web/**/.git"
    - "$CI_PROJECT_DIR/web/**/.git/**/*"
    - vendor/**/.git
    - vendor/**/.git/**/*
    name: artifacts-$CI_PIPELINE_ID-$CI_JOB_NAME_SLUG
    paths:
    - "$CI_PROJECT_DIR"
    - $PHPUNIT_RESULTS_FILE
    reports:
      junit: $PHPUNIT_RESULTS_FILE

composer:

  <<: *ddev-base

  stage: build

  script:
    - ddev composer install --no-progress

yarn:

  <<: *ddev-base

  stage: build

  needs:
    - composer

  script:
    - ddev yarn install
    - ddev yarn build:deploy

# Hidden job intended as a template for tests.
#
# @see https://docs.gitlab.com/ee/ci/yaml/yaml_optimization.html#anchors
.test-base: &test-base

  <<: *ddev-base

  stage: test

  # Don't run on changes to these path patterns.
  #
  # @todo Port this to rules as 'except' is deprecated.
  #
  # @see https://docs.gitlab.com/ci/yaml/#only--except
  except:
    changes:
      # Not relevant for testing.
      - '**.md'
      # DigitalOcean stuff is not currently relevant to CI.
      - '/.apache/**'
      - '/.do/**'
      - '/.php/**'
      # Drupal config is not currently used for testing as that's all set up in
      # modules and in tests.
      - '/drupal_config/**'
      - '/drupal_private_files/**'
      # Drush config is not used for CI.
      - '/drush/**'
      # Ignore any changes in aggregated assets and public files directories.
      - '/web/assets/**'
      - '/web/sites/*/files/**'
      # Obvious reason is obvious.
      - '/.github/**'

test:phpunit:

  <<: *test-base

  script:
    - ddev exec phpunit --group=omnipedia --verbose --log-junit=$PHPUNIT_RESULTS_FILE
