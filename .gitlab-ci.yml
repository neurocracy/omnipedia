stages:
  - .pre
  - build
  - validate
  - test
  - .post

variables:

  DEBIAN_FRONTEND: 'noninteractive'

  COMPOSER_CACHE_PATH_RELATIVE: '.composer/cache'
  YARN_CACHE_PATH_RELATIVE: '.yarn/cache'
  # Absolute cache paths outside of the DDEV web container.
  COMPOSER_CACHE_DIR_CI: '$CI_PROJECT_DIR/$COMPOSER_CACHE_PATH_RELATIVE'
  YARN_CACHE_DIR_CI: '$CI_PROJECT_DIR/$YARN_CACHE_PATH_RELATIVE'
  # Absolute cache paths inside the DDEV web container.
  COMPOSER_CACHE_DIR_CONTAINER: '/var/www/html/$COMPOSER_CACHE_PATH_RELATIVE'
  YARN_CACHE_DIR_CONTAINER: '/var/www/html/$YARN_CACHE_PATH_RELATIVE'
  # PHPUnit JUnit-formatted logfile.
  PHPUNIT_RESULTS_FILE_RELATIVE: 'phpunit-results.xml'
  PHPUNIT_RESULTS_FILE_CI: '$CI_PROJECT_DIR/$PHPUNIT_RESULTS_FILE_RELATIVE'
  PHPUNIT_RESULTS_FILE_CONTAINER: '/var/www/html/$PHPUNIT_RESULTS_FILE_RELATIVE'

cache:
  # Cache is per-branch.
  key: '$CI_BUILD_REF_NAME'
  paths:
    - '$COMPOSER_CACHE_DIR_CI'
    - '$YARN_CACHE_DIR_CI'

.file-patterns-ci: &file-patterns-ci
  - .gitlab-ci.yml

.file-patterns-ddev: &file-patterns-ddev
  - .ddev/**/*

.file-patterns-composer: &file-patterns-composer
  - composer.json
  - composer.lock
  - composer.patches.json

.file-patterns-yarn: &file-patterns-yarn
  - .yarn/**/*
  - .yarnrc.yml
  - package.json
  - yarn.lock

.file-patterns-phpunit: &file-patterns-phpunit
  - phpunit.xml

.ci-base: &ci-base

  # Allow jobs to be cancelled if a newer commit is pushed to the same branch.
  #
  # @see https://docs.gitlab.com/ci/pipelines/settings/#auto-cancel-redundant-pipelines
  interruptible: true

  artifacts:
    expire_in: 1 week
    expose_as: web
    when: always
    exclude:
    - '.git'
    - '.git/**/*'
    - '$CI_PROJECT_DIR/web/**/.git'
    - '$CI_PROJECT_DIR/web/**/.git/**/*'
    - vendor/**/.git
    - vendor/**/.git/**/*
    name: artifacts-$CI_PIPELINE_ID-$CI_JOB_NAME_SLUG
    paths:
    - '$CI_PROJECT_DIR'
    - '$PHPUNIT_RESULTS_FILE_CI'
    reports:
      junit: '$PHPUNIT_RESULTS_FILE_CI'

.drupalci-base: &drupalci-base

  <<: *ci-base

  # @see https://hub.docker.com/r/drupalci/php-8.3-ubuntu-apache
  image: drupalci/php-8.3-ubuntu-apache:production

  services:
  # @see https://hub.docker.com/r/drupalci/mysql-8
  - name: drupalci/mysql-8:production
    alias: database

  variables:
    COMPOSER_CACHE_DIR: $COMPOSER_CACHE_DIR_CI
    YARN_CACHE_FOLDER:  $YARN_CACHE_DIR_CI

    PHPUNIT_RESULTS_FILE_CONTAINER: $PHPUNIT_RESULTS_FILE_CI

    # Allow service containers to see each other.
    #
    # @see https://docs.gitlab.com/ee/ci/services/#connecting-services
    FF_NETWORK_PER_BUILD: 'true'

    _WEB_ROOT: web
    BROWSERTEST_OUTPUT_DIRECTORY: '$CI_PROJECT_DIR/$_WEB_ROOT/sites/simpletest/browser_output'
    SIMPLETEST_BASE_URL: http://localhost/$_WEB_ROOT
    DB_DRIVER: mysql
    MYSQL_ROOT_PASSWORD: root
    MYSQL_DATABASE: mysql
    MYSQL_USER: drupaltestbot
    MYSQL_PASSWORD: drupaltestbotpw
    SIMPLETEST_DB: 'mysql://$MYSQL_USER:$MYSQL_PASSWORD@database/$MYSQL_DATABASE'

  before_script:
    - cd $CI_PROJECT_DIR && pwd
    - mkdir -pv $BROWSERTEST_OUTPUT_DIRECTORY
    - mkdir -pv $CI_PROJECT_DIR/$_WEB_ROOT/sites/default/files/simpletest
    - chmod -R 755 $BROWSERTEST_OUTPUT_DIRECTORY
    - chmod -R 755 $CI_PROJECT_DIR/$_WEB_ROOT/sites/default/files/simpletest
    - ln -s $CI_PROJECT_DIR/$_WEB_ROOT /var/www/html
    - chown -R www-data:www-data $CI_PROJECT_DIR
    - service apache2 start

# Hidden job intended as a template for other DDEV-based jobs.
#
# @see https://docs.gitlab.com/ee/ci/yaml/yaml_optimization.html#anchors
.ddev-base: &ddev-base

  <<: *ci-base

  variables:

    DOCKER_HOST: tcp://docker:2375
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: ''

    # Allow service containers to see each other.
    #
    # @see https://docs.gitlab.com/ee/ci/services/#connecting-services
    FF_NETWORK_PER_BUILD: 'true'
    # Remove 'umask 0000' usage so DDEV has permissions on the cloned
    # repository.
    #
    # @see https://docs.gitlab.com/runner/configuration/feature-flags.html#available-feature-flags
    FF_DISABLE_UMASK_FOR_DOCKER_EXECUTOR: 'true'

  services:
    - name: docker:20-dind
      alias: docker
      command: ['--tls=false']

  image:

    name: registry.gitlab.com/consensus.enterprises/drumkit/ddev
    # Options to run the Docker executor with; notably run as the 'ddev' user
    # and group. This must match the user and group that the Drumkit DDEV image
    # creates.
    #
    # @see https://docs.gitlab.com/ee/ci/yaml/index.html#imagedocker
    docker:
      user: ddev:ddev
    # We have to override the container entrypoint or else we end up in /bin/sh.
    #
    # @see https://docs.gitlab.com/ee/ci/docker/using_docker_images.html#overriding-the-entrypoint-of-an-image
    entrypoint: ['']

  rules:
    # Run only on these path patterns having changes.
    #
    # @see https://docs.gitlab.com/ci/yaml/#ruleschanges
    - changes: *file-patterns-ddev

  before_script:
    # Opt into sending diagnotistic data to the DDEV project to help improve it.
    #
    # @see https://ddev.readthedocs.io/en/stable/users/usage/diagnostics/
    - ddev config global --instrumentation-opt-in=true
    # Disable the DDEV SSH agent container as it fails its health checks and we
    # don't need it.
    - ddev config global --omit-containers=ddev-ssh-agent
    # Ensure neither Mutagen nor NFS are used. The former seems primarily
    # intended for Mac and Windows, and the latter is deprecated and not
    # recommended.
    #
    # @see https://ddev.readthedocs.io/en/stable/users/install/performance/
    - ddev mutagen reset && ddev config global --performance-mode=none
    # Pass the Composer and Yarn cache directory paths to the container since
    # they don't inherit environment variables from outside the container.
    #
    # @see https://ddev.readthedocs.io/en/stable/users/extend/customization-extendibility/#environment-variables-for-containers-and-services
    - ddev config --web-environment-add='COMPOSER_CACHE_DIR=$COMPOSER_CACHE_DIR_CONTAINER'
    - ddev config --web-environment-add='YARN_CACHE_FOLDER=$YARN_CACHE_DIR_CONTAINER'
    - ddev start

build:composer:

  <<: *drupalci-base

  stage: build

  rules:
    # Run only on these path patterns having changes.
    #
    # @see https://docs.gitlab.com/ci/yaml/#ruleschanges
    - changes: *file-patterns-ci
    - changes: *file-patterns-composer
    # Because subsequent jobs require this and there's way to have subsequent
    # jobs that require this also cause this job to run at the time of writing,
    # we have to include these here, inelegant though it is.
    - changes: *file-patterns-yarn
    - changes: *file-patterns-phpunit

  script:
    - composer install --no-progress

build:yarn:

  <<: *drupalci-base

  stage: build

  needs:
    - build:composer

  rules:
    # Run only on these path patterns having changes.
    #
    # @see https://docs.gitlab.com/ci/yaml/#ruleschanges
    - changes: *file-patterns-ci
    - changes: *file-patterns-composer
    - changes: *file-patterns-yarn

  before_script:
    - corepack enable
    - corepack prepare yarn@4.6.0 --activate

  script:
    - yarn install
    - yarn build:deploy

validate:composer:

  <<: *drupalci-base

  stage: validate

  needs:
    - build:composer

  rules:
    # Run only on these path patterns having changes.
    #
    # @see https://docs.gitlab.com/ci/yaml/#ruleschanges
    - changes: *file-patterns-ci
    - changes: *file-patterns-composer

  script:
    # @see https://getcomposer.org/doc/03-cli.md#validate
    #
    # @todo Use the --strict option? Currently fails due to "2.x-dev as 2.0@dev"
    #   style versions that lack a version constraint. Figure out if we can
    #   use a version range/constraint that doesn't result in a warning while
    #   also allowing the use of checked out Git branches.
    - composer validate --no-check-version

# Hidden job intended as a template for tests.
#
# @see https://docs.gitlab.com/ee/ci/yaml/yaml_optimization.html#anchors
.test-base: &test-base

  <<: *drupalci-base

  stage: test

test:phpunit:

  <<: *test-base

  needs:
    - build:composer

  rules:
    # Run only on these path patterns having changes.
    #
    # @see https://docs.gitlab.com/ci/yaml/#ruleschanges
    - changes: *file-patterns-ci
    - changes: *file-patterns-composer
    - changes: *file-patterns-phpunit

  script:
    - $CI_PROJECT_DIR/vendor/bin/phpunit --group=omnipedia --verbose --log-junit=$PHPUNIT_RESULTS_FILE_CONTAINER
