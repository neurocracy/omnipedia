stages:
  - test

image: ddev/ddev-webserver:latest

variables:
  DEBIAN_FRONTEND: "noninteractive"
  # COMPOSER_CACHE_PATH_RELATIVE: ".composer/cache"
  # YARN_CACHE_PATH_RELATIVE: ".yarn/cache"
  # # Absolute cache paths outside of the DDEV web container.
  # COMPOSER_CACHE_DIR_CI: "$CI_PROJECT_DIR/$COMPOSER_CACHE_PATH_RELATIVE"
  # YARN_CACHE_DIR_CI: "$CI_PROJECT_DIR/$YARN_CACHE_PATH_RELATIVE"
  # # Absolute cache paths inside the DDEV web container.
  # COMPOSER_CACHE_DIR_CONTAINER: "/var/www/html/$COMPOSER_CACHE_PATH_RELATIVE"
  # YARN_CACHE_DIR_CONTAINER: "/var/www/html/$YARN_CACHE_PATH_RELATIVE"
  COMPOSER_CACHE_DIR: ".composer/cache"
  YARN_CACHE_FOLDER: ".yarn/cache"
  # Allow service containers to see each other.
  #
  # @see https://docs.gitlab.com/ee/ci/services/#connecting-services
  FF_NETWORK_PER_BUILD: 'true'

cache:
  # Cache is per-branch.
  key: "$CI_BUILD_REF_NAME"
  paths:
    - "$COMPOSER_CACHE_DIR_CI"
    - "$YARN_CACHE_DIR_CI"

# Hidden job intended as a template for tests.
#
# @see https://docs.gitlab.com/ee/ci/yaml/yaml_optimization.html#anchors
.test-base: &test-base
  stage: test

  # Don't run on changes to these path patterns.
  #
  # @todo Port this to rules as 'except' is deprecated.
  #
  # @see https://docs.gitlab.com/ci/yaml/#only--except
  except:
    changes:
      # Not relevant for testing.
      - '**.md'
      # DigitalOcean stuff is not currently relevant to CI.
      - '/.apache/**'
      - '/.do/**'
      - '/.php/**'
      # Drupal config is not currently used for testing as that's all set up in
      # modules and in tests.
      - '/drupal_config/**'
      - '/drupal_private_files/**'
      # Drush config is not used for CI.
      - '/drush/**'
      # Ignore any changes in aggregated assets and public files directories.
      - '/web/assets/**'
      - '/web/sites/*/files/**'
      # Obvious reason is obvious.
      - '/.github/**'

  before_script:

    - node --version

    - pwd

    - composer install --no-progress

    # In case Corepack isn't enabled in Node.js, we have to do that here.
    - corepack enable
    # At the time of writing, the Node.js in GitLab CI is 18.x, which doesn't
    # have the 'corepack use' command that newer versions of Corepack offer so
    # we have to explicitly set a Yarn version here. Note that this upgrades
    # the global Yarn so that we can install the local Yarn in the next step.
    # The default version of Yarn is 1.x which doesn't understand the
    # 'yarn set' command and will fail.
    #
    # @see https://nodejs.org/docs/latest-v18.x/api/corepack.html
    - corepack prepare yarn@4.6.0 --activate
    # Now that the global Yarn understands the 'yarn set' command, set the local
    # Yarn to 4.x.
    - yarn set version 4.6.0

    - yarn install
    - yarn build:deploy

  artifacts:
    expire_in: 1 week
    expose_as: web
    when: always
    exclude:
    - ".git"
    - ".git/**/*"
    - "$CI_PROJECT_DIR/web/**/.git"
    - "$CI_PROJECT_DIR/web/**/.git/**/*"
    - vendor/**/.git
    - vendor/**/.git/**/*
    name: artifacts-$CI_PIPELINE_ID-$CI_JOB_NAME_SLUG
    paths:
    - "$CI_PROJECT_DIR"

test:phpunit:
  <<: *test-base
  script:
    - phpunit --group=omnipedia --verbose
